@model LibraryOnlineSystem.Models.Book

@{
    ViewBag.Title = "EditBook";
    Layout = "~/Views/Shared/_Admin_Layout.cshtml";
}
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")*@
<script src="~/Scripts/globalize.js"></script>
<script src="~/Scripts/globalize.culture.fr-FR.js"></script>
<script>
    $.validator.methods.number = function (value, element) {
        return this.optional(element) ||
            !isNaN(Globalize.parseFloat(value));
    }
    $(document).ready(function () {
        Globalize.culture('fr-FR');
    });
</script>

<style>
    .bs-example {
        margin: 20px;
    }

    .icon-input-btn {
        display: inline-block;
        position: relative;
    }

        .icon-input-btn input[type="submit"] {
            padding-left: 2em;
        }

        .icon-input-btn .glyphicon {
            display: inline-block;
            position: absolute;
            left: 0.65em;
            top: 30%;
        }
</style>
<script>
    $(document).ready(function () {
        $(".icon-input-btn").each(function () {
            var btnFont = $(this).find(".btn").css("font-size");
            var btnColor = $(this).find(".btn").css("color");
            $(this).find(".glyphicon").css("font-size", btnFont);
            $(this).find(".glyphicon").css("color", btnColor);
            if ($(this).find(".btn-xs").length) {
                $(this).find(".glyphicon").css("top", "24%");
            }
        });
    });
</script>

<script>
    jQuery.extend(jQuery.validator.methods, {
        range: function (value, element, param) {
            //Use the Globalization plugin to parse the value
            var val = $.global.parseFloat(value);
            return this.optional(element) || (
                val >= param[0] && val <= param[1]);
        }
    });

</script>
<script>
    $(document).ready(function () {
        var now = new Date();
        var day = (@Model.DateOfPublication.Day.ToString().Length != 2) ? "0" + @Model.DateOfPublication.Day : @Model.DateOfPublication.Day;
        var month = (@Model.DateOfPublication.Month.ToString().Length != 2) ? "0" + @Model.DateOfPublication.Month : @Model.DateOfPublication.Month;
        var today = @Model.DateOfPublication.Year + "-" + (month) + "-" + (day);
        $('#DateOfPublication').val(today);
    });
</script>
@*}*@
<h2 class="text-center" style="color:black">Edit Book</h2>
<hr />
@using (Html.BeginForm("EditBook", "Admin",
    FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.EditorForModel()
    @Html.ActionLink("Add Author", "AddAuthorsToBook", "Book", new { bookId = Model.BookId, authorId = 0 }, null)

    <div class="editor-label">Image</div>
    <div class="editor-field">
        @if (Model.ImageData == null)
        {
            @:No image
        }
        else
        {
            <img width="150" height="150"
                 src="@Url.Action("GetImage", "Admin", new { Model.BookId })" />

        }
        <div>Upload new image: <input type="file" value=@Model.ImageData name="Image" /></div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <span class="icon-input-btn"><span class="glyphicon glyphicon-edit"></span><input type="submit" value="Create" class="btn btn-primary" /></span>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
